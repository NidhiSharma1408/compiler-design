Grammar

    0 $accept: s $end

    1 s: s line
    2  | %empty

    3 line: '\n'
    4     | exp '\n'
    5     | error '\n'

    6 exp: INT
    7    | FLOAT
    8    | exp '+' exp
    9    | exp '-' exp
   10    | exp '*' exp
   11    | exp '/' exp
   12    | '-' exp
   13    | '+' exp
   14    | '(' exp ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5
    '(' (40) 14
    ')' (41) 14
    '*' (42) 10
    '+' (43) 8 13
    '-' (45) 9 12
    '/' (47) 11
    error (256) 5
    INT <integer> (258) 6
    FLOAT <real> (259) 7
    UNEG (260)
    UPOS (261)


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    s (15)
        on left: 1 2
        on right: 0 1
    line (16)
        on left: 3 4 5
        on right: 1
    exp <real> (17)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 4 8 9 10 11 12 13 14


State 0

    0 $accept: • s $end

    $default  reduce using rule 2 (s)

    s  go to state 1


State 1

    0 $accept: s • $end
    1 s: s • line

    $end   shift, and go to state 2
    error  shift, and go to state 3
    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '\n'   shift, and go to state 8
    '('    shift, and go to state 9

    line  go to state 10
    exp   go to state 11


State 2

    0 $accept: s $end •

    $default  accept


State 3

    5 line: error • '\n'

    '\n'  shift, and go to state 12


State 4

    6 exp: INT •

    $default  reduce using rule 6 (exp)


State 5

    7 exp: FLOAT •

    $default  reduce using rule 7 (exp)


State 6

   12 exp: '-' • exp

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 13


State 7

   13 exp: '+' • exp

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 14


State 8

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 9

   14 exp: '(' • exp ')'

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 15


State 10

    1 s: s line •

    $default  reduce using rule 1 (s)


State 11

    4 line: exp • '\n'
    8 exp: exp • '+' exp
    9    | exp • '-' exp
   10    | exp • '*' exp
   11    | exp • '/' exp

    '-'   shift, and go to state 16
    '+'   shift, and go to state 17
    '*'   shift, and go to state 18
    '/'   shift, and go to state 19
    '\n'  shift, and go to state 20


State 12

    5 line: error '\n' •

    $default  reduce using rule 5 (line)


State 13

    8 exp: exp • '+' exp
    9    | exp • '-' exp
   10    | exp • '*' exp
   11    | exp • '/' exp
   12    | '-' exp •

    $default  reduce using rule 12 (exp)


State 14

    8 exp: exp • '+' exp
    9    | exp • '-' exp
   10    | exp • '*' exp
   11    | exp • '/' exp
   13    | '+' exp •

    $default  reduce using rule 13 (exp)


State 15

    8 exp: exp • '+' exp
    9    | exp • '-' exp
   10    | exp • '*' exp
   11    | exp • '/' exp
   14    | '(' exp • ')'

    '-'  shift, and go to state 16
    '+'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    ')'  shift, and go to state 21


State 16

    9 exp: exp '-' • exp

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 22


State 17

    8 exp: exp '+' • exp

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 23


State 18

   10 exp: exp '*' • exp

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 24


State 19

   11 exp: exp '/' • exp

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    '-'    shift, and go to state 6
    '+'    shift, and go to state 7
    '('    shift, and go to state 9

    exp  go to state 25


State 20

    4 line: exp '\n' •

    $default  reduce using rule 4 (line)


State 21

   14 exp: '(' exp ')' •

    $default  reduce using rule 14 (exp)


State 22

    8 exp: exp • '+' exp
    9    | exp • '-' exp
    9    | exp '-' exp •
   10    | exp • '*' exp
   11    | exp • '/' exp

    '*'  shift, and go to state 18
    '/'  shift, and go to state 19

    $default  reduce using rule 9 (exp)


State 23

    8 exp: exp • '+' exp
    8    | exp '+' exp •
    9    | exp • '-' exp
   10    | exp • '*' exp
   11    | exp • '/' exp

    '*'  shift, and go to state 18
    '/'  shift, and go to state 19

    $default  reduce using rule 8 (exp)


State 24

    8 exp: exp • '+' exp
    9    | exp • '-' exp
   10    | exp • '*' exp
   10    | exp '*' exp •
   11    | exp • '/' exp

    $default  reduce using rule 10 (exp)


State 25

    8 exp: exp • '+' exp
    9    | exp • '-' exp
   10    | exp • '*' exp
   11    | exp • '/' exp
   11    | exp '/' exp •

    $default  reduce using rule 11 (exp)
